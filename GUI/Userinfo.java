

import javax.swing.JOptionPane;
import java.io.FileWriter;
import java.io.IOException;
import java.io.BufferedWriter;
import java.util.List;
import Lib.Room;
import Lib.Dorm;

/**
 * ฟอร์มข้อมูลผู้ใช้ - User Information Form
 * ใช้สำหรับกรอกข้อมูลส่วนตัวและข้อมูลผู้ปกครอง
 * @author AVS_KTB
 */
public class Userinfo extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Userinfo.class.getName());
    
    // ตัวแปรสำหรับเก็บข้อมูลห้องที่เลือก
    private String selectedRoom = "";
    
    // ตัวแปรสำหรับเก็บข้อมูล Dorm ที่เลือก
    private String selectedDorm = "";
    
    private javax.swing.JPanel Background4;
    
    // Label หัวข้อ
    private javax.swing.JLabel BrookingDorm4;
    
    // Label แสดงห้องที่เลือก
    private javax.swing.JLabel roomLabel;
    
    // ComboBox สำหรับเลือกห้อง
    private javax.swing.JComboBox<String> roomComboBox;
    
    // ปุ่ม Reserve
    private javax.swing.JButton jB_Register4;
    
    // Labels สำหรับข้อมูลผู้ปกครอง
    private javax.swing.JLabel jLabel42;  // Parent Name
    private javax.swing.JLabel jLabel43;  // Parent Phone Number
    private javax.swing.JLabel jLabel47;  // Parent last Name
    private javax.swing.JLabel jLabel50;  // Parent Email
    
    // Labels สำหรับข้อมูลผู้ใช้
    private javax.swing.JLabel jLabel44;  // Your Email
    private javax.swing.JLabel jLabel45;  // (ไม่ใช้)
    private javax.swing.JLabel jLabel46;  // Your Phone Number
    private javax.swing.JLabel jLabel48;  // first name
    private javax.swing.JLabel jLabel49;  // last name
    
    // TextFields ที่ไม่ใช้
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    

    // TextFields สำหรับข้อมูลผู้ใช้
    private javax.swing.JTextField jTextField3;  // first name
    private javax.swing.JTextField jTextField4;  // last name
    
    // TextFields สำหรับข้อมูลผู้ปกครอง
    private javax.swing.JTextField t21;  // Parent last Name
    private javax.swing.JTextField t22;  // Parent Name
    private javax.swing.JTextField t23;  // Parent Email
    private javax.swing.JTextField t24;  // Your Email
    private javax.swing.JTextField t25;  // Your Phone Number
    private javax.swing.JTextField t26;  // Parent Phone Number
    
    // End of variables declaration             
    // ========================================
    // CONSTRUCTOR - ตัวสร้าง
    // ========================================
    
    /**
     * สร้างฟอร์มข้อมูลผู้ใช้ (ใช้ Dorm A เป็นค่าเริ่มต้น)
     */
    public Userinfo() {
        this.selectedDorm = "Dorm A"; // ค่าเริ่มต้น
        initComponents();
    }
    
    /**
     * สร้างฟอร์มข้อมูลผู้ใช้พร้อมข้อมูล Dorm
     * @param dorm Dorm ที่เลือก (เช่น "Dorm A", "Dorm B")
     */
    public Userinfo(String dorm) {
        this.selectedDorm = dorm;
        initComponents();
    }
    
    /**
     * สร้างฟอร์มข้อมูลผู้ใช้พร้อมข้อมูล Dorm และห้อง
     * @param dorm Dorm ที่เลือก
     * @param room ห้องที่เลือก
     */
    public Userinfo(String dorm, String room) {
        this.selectedDorm = dorm;
        this.selectedRoom = room;
        initComponents();
        updateRoomDisplay();
    }

    // ========================================
    // UI INITIALIZATION - การเริ่มต้น UI
    // ========================================
    
    /**
     * เริ่มต้นองค์ประกอบ UI ทั้งหมด
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        // ========================================
        // DECLARE COMPONENTS - ประกาศคอมโพเนนต์
        // ========================================
        
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        Background4 = new javax.swing.JPanel();
        BrookingDorm4 = new javax.swing.JLabel();
        roomLabel = new javax.swing.JLabel();
        roomComboBox = new javax.swing.JComboBox<>();
        t21 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        t24 = new javax.swing.JTextField();
        jB_Register4 = new javax.swing.JButton();
        t25 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        t22 = new javax.swing.JTextField();
        t23 = new javax.swing.JTextField();
        t26 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();

        // ========================================
        // SETUP COMPONENTS - ตั้งค่าคอมโพเนนต์
        // ========================================
        
        // ตั้งค่า TextField ที่ไม่ใช้
        jTextField1.setText("jTextField1");
        jTextField2.setText("jTextField2");

        // ตั้งค่าหน้าต่างหลัก
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User Information Form");
        setResizable(true);

        // ตั้งค่า Panel หลัก
        Background4.setBackground(new java.awt.Color(233, 200, 255));
        Background4.setForeground(new java.awt.Color(240, 255, 222));
        
        // ตั้งค่าพื้นหลังหน้าต่างให้เป็นสีขาว
        getContentPane().setBackground(new java.awt.Color(255, 255, 255));

        // ตั้งค่าหัวข้อฟอร์ม
        BrookingDorm4.setFont(new java.awt.Font("EucrosiaUPC", 1, 48)); // NOI18N
        BrookingDorm4.setForeground(java.awt.Color.black);
        BrookingDorm4.setText("๊      User information");

        // ตั้งค่า Label แสดงห้องที่เลือก
        roomLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        roomLabel.setForeground(java.awt.Color.BLUE);
        roomLabel.setText("Select Room:");

        // ตั้งค่า ComboBox สำหรับเลือกห้อง
        roomComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        loadRoomsForDorm(); // โหลดห้องตาม Dorm ที่เลือก
        roomComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomComboBoxActionPerformed(evt);
            }
        });

        // ตั้งค่า TextField สำหรับข้อมูลผู้ปกครอง
        t21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        t21.setToolTipText("");
        t21.setActionCommand("<Not Set>");
        t21.setDisabledTextColor(new java.awt.Color(255, 255, 255));

        // ตั้งค่า Labels สำหรับข้อมูลผู้ปกครอง
        jLabel42.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel42.setText("Parent Name");

        jLabel43.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel43.setText("Parent Phone Number");

        jLabel44.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel44.setText("Your Email");

        jLabel45.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N

        jLabel46.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel46.setText("Your Phone Number");

        jLabel48.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel48.setText("first name");

        jLabel49.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel49.setText("last name");

        // ตั้งค่า TextField สำหรับข้อมูลผู้ใช้
        t24.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        t24.setToolTipText("");
        t24.setActionCommand("<Not Set>");
        t24.setDisabledTextColor(new java.awt.Color(255, 255, 255));

        // ตั้งค่าปุ่ม Reserve
        jB_Register4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jB_Register4.setText("Reserve");
        jB_Register4.setPreferredSize(new java.awt.Dimension(120, 50));
        jB_Register4.setBackground(java.awt.Color.WHITE);
        jB_Register4.setForeground(java.awt.Color.BLACK);
        jB_Register4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.GRAY, 1));
        jB_Register4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Register4ActionPerformed(evt);
            }
        });

        t25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        t25.setToolTipText("");
        t25.setActionCommand("<Not Set>");
        t25.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        t25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t25ActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel47.setText("Parent last Name");

        // ตั้งค่า TextField สำหรับชื่อ-นามสกุล (มีค่าเริ่มต้น)
        jTextField3.setText("");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
 
        t22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        t22.setText("");
        t22.setToolTipText("");
        t22.setActionCommand("<Not Set>");
        t22.setDisabledTextColor(new java.awt.Color(255, 255, 255));

        t23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        t23.setToolTipText("");
        t23.setActionCommand("<Not Set>");
        t23.setDisabledTextColor(new java.awt.Color(255, 255, 255));

        t26.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        t26.setToolTipText("");
        t26.setActionCommand("<Not Set>");
        t26.setDisabledTextColor(new java.awt.Color(255, 255, 255));

        jLabel50.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jLabel50.setText("Parent Email");

        // ========================================
        // LAYOUT SETUP - การจัดวาง Layout
        // ========================================
        
        javax.swing.GroupLayout Background4Layout = new javax.swing.GroupLayout(Background4);
        Background4.setLayout(Background4Layout);
        
        // จัดวางแนวนอน
        Background4Layout.setHorizontalGroup(
            Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(Background4Layout.createSequentialGroup()
                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Background4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel45))
                    .addGroup(Background4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            // แถวแรก: first name, last name, email, phone
                            .addGroup(Background4Layout.createSequentialGroup()
                                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Background4Layout.createSequentialGroup()
                                        .addComponent(jLabel48)
                                        .addGap(162, 162, 162)
                                        .addComponent(jLabel49))
                                    .addGroup(Background4Layout.createSequentialGroup()
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addComponent(t24, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Background4Layout.createSequentialGroup()
                                        .addComponent(jLabel46)
                                        .addGap(83, 83, 83))
                                    .addComponent(t25, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            // แถวที่สอง: ข้อมูลผู้ปกครอง
                            .addGroup(Background4Layout.createSequentialGroup()
                                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Background4Layout.createSequentialGroup()
                                        .addComponent(jLabel42)
                                        .addGap(143, 143, 143))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Background4Layout.createSequentialGroup()
                                        .addComponent(t22, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t21, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t23, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel50))
                                .addGap(18, 18, 18)
                                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t26, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel43))))))
                .addGap(10, 10, 10))
            // หัวข้อและปุ่ม
            .addGroup(Background4Layout.createSequentialGroup()
                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Background4Layout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(BrookingDorm4, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Background4Layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(roomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(roomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Background4Layout.createSequentialGroup()
                        .addGap(398, 398, 398)
                        .addComponent(jB_Register4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        // จัดวางแนวตั้ง
        Background4Layout.setVerticalGroup(
            Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(Background4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(BrookingDorm4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                // แถวแรก: Labels
                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel44)
                        .addComponent(jLabel46))
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                // แถวแรก: TextFields
                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t24, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t25, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Background4Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel45)
                        .addGap(247, 247, 247))
                    .addGroup(Background4Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        // แถวที่สอง: Labels ผู้ปกครอง
                        .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50)
                            .addComponent(jLabel43))
                        .addGap(8, 8, 8)
                        // แถวที่สอง: TextFields ผู้ปกครอง
                        .addGroup(Background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t22, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t21, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t23, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t26, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        // ปุ่ม Reserve
                        .addComponent(jB_Register4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );

        // จัดวางหน้าต่างหลัก - ไม่มีขอบเลย
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        
        // ตั้งค่าขนาดหน้าต่างให้พอดีกับเนื้อหา
        setSize(960, 650);
        setLocationRelativeTo(null); // จัดให้อยู่กลางหน้าจอ
    }// </editor-fold>                        

    // ========================================
    // EVENT HANDLERS - จัดการเหตุการณ์
    // ========================================
    
    /**
     * จัดการการคลิกปุ่ม Reserve
     * ตรวจสอบข้อมูลและบันทึกข้อมูลผู้ใช้
     */
    private void jB_Register4ActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // ดึงข้อมูลจากช่องกรอกข้อมูล
        String firstName = jTextField3.getText().trim();        // ชื่อ
        String lastName = jTextField4.getText().trim();        // นามสกุล
        String email = t24.getText().trim();                   // อีเมล
        String phone = t25.getText().trim();                   // เบอร์โทรศัพท์
        String parentFirstName = t22.getText().trim();         // ชื่อผู้ปกครอง
        String parentLastName = t21.getText().trim();         // นามสกุลผู้ปกครอง
        String parentEmail = t23.getText().trim();            // อีเมลผู้ปกครอง
        String parentPhone = t26.getText().trim();            // เบอร์โทรผู้ปกครอง

        // ตรวจสอบว่ากรอกข้อมูลครบถ้วน
        if (firstName.isEmpty() || lastName.isEmpty() || email.isEmpty() || phone.isEmpty() ||
            parentFirstName.isEmpty() || parentLastName.isEmpty() || parentEmail.isEmpty() || parentPhone.isEmpty()) {
            JOptionPane.showMessageDialog(this, "information Not completely.", "Incorrect", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // ตรวจสอบรูปแบบอีเมล
        if (!email.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$")) {
            JOptionPane.showMessageDialog(this, "Email incorrect", "Incorrect", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // ตรวจสอบรูปแบบอีเมลผู้ปกครอง
        if (!parentEmail.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$")) {
            JOptionPane.showMessageDialog(this, "ParentEmail incorrect", "Incorrect", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // ตรวจสอบเบอร์โทรศัพท์ (ต้องเป็นตัวเลขเท่านั้น)
        if (!phone.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Number incorrect", "Incorrect", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // ตรวจสอบเบอร์โทรผู้ปกครอง
        if (!parentPhone.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Number incorrect", "Incorrect", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // ตรวจสอบว่ามีการตั้งค่าห้องหรือไม่
        String currentRoom = (String) roomComboBox.getSelectedItem();
        if (currentRoom == null || currentRoom.equals("Select Room") || currentRoom.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a room first.", "No Room Selected", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // ลบ "(Not Available)" ออกจากชื่อห้องก่อนบันทึก
        String cleanRoomName = currentRoom.replace(" (Not Available)", "").trim();
        
        // ตรวจสอบว่าห้องว่างหรือไม่
        if (currentRoom.contains("(Not Available)")) {
            JOptionPane.showMessageDialog(this, "Room " + cleanRoomName + " is not available for booking!", "Room Not Available", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        selectedRoom = cleanRoomName;
        System.out.println("Final selected room for saving: " + selectedRoom); // Debug

        // บันทึกข้อมูลลงใน CSV
        try {
            System.out.println("Saving data for room: " + selectedRoom); // Debug
            saveReservationData(selectedRoom, firstName, lastName, phone, email, "Pending");
            
            // เปลี่ยนสถานะห้องเป็น "Currently booking"
            boolean roomReserved = Dorm.reserveRoom(selectedDorm, selectedRoom);
            if (roomReserved) {
                System.out.println("Room " + selectedRoom + " status changed to 'Currently booking'"); // Debug
            } else {
                System.out.println("Failed to change room status for " + selectedRoom); // Debug
            }
            
            // หากการตรวจสอบผ่านทั้งหมด แสดงข้อความสำเร็จ
            JOptionPane.showMessageDialog(this, "The data has been saved successfully to room " + selectedRoom + "\nRoom status changed to 'Currently booking'", "Succeed", JOptionPane.INFORMATION_MESSAGE);
            
            // ล้างข้อมูลในช่องกรอกทั้งหมด
            clearAllFields();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                            

    /**
     * จัดการเหตุการณ์ TextField t25 (เบอร์โทรศัพท์)
     */
    private void t25ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO: เพิ่มการจัดการเหตุการณ์หากจำเป็น
    }                                   

    /**
     * จัดการเหตุการณ์ ComboBox เลือกห้อง
     */
    private void roomComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        String selected = (String) roomComboBox.getSelectedItem();
        System.out.println("Room ComboBox changed to: " + selected); // Debug
        
        if (selected != null && !selected.equals("Select Room")) {
            // ลบ "(Not Available)" ออกจากชื่อห้อง
            String roomName = selected.replace(" (Not Available)", "");
            
            // ตรวจสอบว่าห้องว่างหรือไม่
            if (selected.contains("(Not Available)")) {
                JOptionPane.showMessageDialog(this, 
                    "Room " + roomName + " is not available for booking!", 
                    "Room Not Available", 
                    JOptionPane.WARNING_MESSAGE);
                roomComboBox.setSelectedItem("Select Room");
                setSelectedRoom("");
                System.out.println("Room " + roomName + " is not available"); // Debug
            } else {
                setSelectedRoom(roomName);
                System.out.println("Selected room set to: " + selectedRoom); // Debug
            }
        } else {
            setSelectedRoom("");
            System.out.println("Selected room cleared"); // Debug
        }
    }

    /**
     * จัดการเหตุการณ์ TextField jTextField3 (ชื่อ)
     */
    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO: เพิ่มการจัดการเหตุการณ์หากจำเป็น
    }                                           

    // ========================================
    // UTILITY METHODS - เมธอดช่วยเหลือ
    // ========================================
    
    /**
     * ล้างข้อมูลในช่องกรอกทั้งหมด
     */
    private void clearAllFields() {
        jTextField3.setText("");  // ชื่อ
        jTextField4.setText("");  // นามสกุล
        t24.setText("");          // อีเมล
        t25.setText("");          // เบอร์โทรศัพท์
        t22.setText("");          // ชื่อผู้ปกครอง
        t21.setText("");          // นามสกุลผู้ปกครอง
        t23.setText("");          // อีเมลผู้ปกครอง
        t26.setText("");          // เบอร์โทรผู้ปกครอง
    }
    
    /**
     * บันทึกข้อมูลการจองลงในไฟล์ CSV
     * @param room ห้องที่จอง
     * @param firstName ชื่อ
     * @param lastName นามสกุล
     * @param phoneNum เบอร์โทรศัพท์
     * @param email อีเมล
     * @param status สถานะ
     * @throws IOException หากเกิดข้อผิดพลาดในการเขียนไฟล์
     */
    private void saveReservationData(String room, String firstName, String lastName, String phoneNum, String email, String status) throws IOException {
        System.out.println("saveReservationData called with room: " + room); // Debug
        System.out.println("Data: " + firstName + "," + lastName + "," + phoneNum + "," + email + "," + status); // Debug
        
        // บันทึกลงใน requests_add.csv
        saveToRequestsAdd(room, firstName, lastName, phoneNum, email, status);
        
        // บันทึกลงในไฟล์ตาม Dorm
        saveToSpecificDorm(room, firstName, lastName, phoneNum, email, status);
    }
    
    /**
     * บันทึกข้อมูลลงใน requests_add.csv
     */
    private void saveToRequestsAdd(String room, String firstName, String lastName, String phoneNum, String email, String status) throws IOException {
        String dataLine = room + "," + firstName + "," + lastName + "," + phoneNum + "," + email + "," + status;
        System.out.println("Saving to requests_add.csv: " + dataLine); // Debug
        
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("File/requests_add.csv", true))) {
            writer.write(dataLine);
            writer.newLine();
            System.out.println("Successfully saved to requests_add.csv"); // Debug
        }
    }
    
    /**
     * บันทึกข้อมูลลงในไฟล์ตาม Dorm (A, B, C หรือ D)
     */
    private void saveToSpecificDorm(String room, String firstName, String lastName, String phoneNum, String email, String status) throws IOException {
        if (room == null || room.isEmpty()) {
            System.out.println("Room is null or empty, skipping specific dorm save"); // Debug
            return;
        }
        
        String dormFile = "";
        String roomNumber = "";
        
        // ตรวจสอบว่าเป็น Dorm A, B, C หรือ D
        if (room.startsWith("A")) {
            dormFile = "File/requests_A.csv";
            roomNumber = room.substring(1); // เอาตัว A ออก
        } else if (room.startsWith("B")) {
            dormFile = "File/requests_B.csv";
            roomNumber = room.substring(1); // เอาตัว B ออก
        } else if (room.startsWith("C")) {
            dormFile = "File/requests_C.csv";
            roomNumber = room.substring(1); // เอาตัว C ออก
        } else if (room.startsWith("D")) {
            dormFile = "File/requests_D.csv";
            roomNumber = room.substring(1); // เอาตัว D ออก
        } else {
            System.out.println("Room " + room + " does not match any dorm pattern"); // Debug
            return; // ถ้าไม่ใช่ A, B, C หรือ D ก็ไม่บันทึก
        }
        
        System.out.println("Saving to specific dorm file: " + dormFile + " with room number: " + roomNumber); // Debug
        
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(dormFile, true))) {
            // ทุก Dorm ใช้รูปแบบเดียวกัน: Room,Firstname,Lastname,Phone_num,Email,status
            writer.write(roomNumber + "," + firstName + "," + lastName + "," + phoneNum + "," + email + "," + status);
            writer.newLine();
            System.out.println("Successfully saved to " + dormFile); // Debug
        }
    }
    
    /**
     * ตั้งค่าห้องที่เลือก
     * @param room ห้องที่เลือก
     */
    public void setSelectedRoom(String room) {
        this.selectedRoom = room;
        updateRoomDisplay();
    }
    
    /**
     * อัปเดตการแสดงผลห้องที่เลือก
     */
    private void updateRoomDisplay() {
        if (roomLabel != null) {
            roomLabel.setText("Selected Room: " + (selectedRoom == null || selectedRoom.isEmpty() ? "Not Selected" : selectedRoom));
        }
    }
    
    /**
     * ดึงข้อมูลห้องที่เลือก
     * @return ห้องที่เลือก
     */
    public String getSelectedRoom() {
        return this.selectedRoom;
    }
    
    /**
     * ตั้งค่า Dorm ที่เลือก
     * @param dorm Dorm ที่เลือก
     */
    public void setSelectedDorm(String dorm) {
        this.selectedDorm = dorm;
        loadRoomsForDorm();
    }
    
    /**
     * ดึงข้อมูล Dorm ที่เลือก
     * @return Dorm ที่เลือก
     */
    public String getSelectedDorm() {
        return this.selectedDorm;
    }
    
    /**
     * โหลดห้องสำหรับ Dorm ที่เลือก
     */
    private void loadRoomsForDorm() {
        if (roomComboBox != null) {
            roomComboBox.removeAllItems();
            roomComboBox.addItem("Select Room");
            
            try {
                List<String> rooms = Room.getRoomsByDormStatic(selectedDorm);
                for (String room : rooms) {
                    // ตรวจสอบสถานะห้อง
                    boolean isAvailable = Room.isRoomAvailableStatic(room);
                    String displayText = room;
                    if (!isAvailable) {
                        displayText += " (Not Available)";
                    }
                    roomComboBox.addItem(displayText);
                }
                System.out.println("Loaded " + rooms.size() + " rooms for " + selectedDorm); // Debug
            } catch (Exception e) {
                System.err.println("Error loading rooms for " + selectedDorm + ": " + e.getMessage());
                // ถ้าเกิดข้อผิดพลาด ให้ใช้ห้องเริ่มต้น
                loadDefaultRooms();
            }
        }
    }
    
    /**
     * โหลดห้องเริ่มต้นกรณีเกิดข้อผิดพลาด
     */
    private void loadDefaultRooms() {
        if (roomComboBox != null) {
            roomComboBox.removeAllItems();
            roomComboBox.addItem("Select Room");
            
            // เพิ่มห้องเริ่มต้นตาม Dorm
            if (selectedDorm.contains("A")) {
                roomComboBox.addItem("A101");
                roomComboBox.addItem("A102");
                roomComboBox.addItem("A121");
                roomComboBox.addItem("A122");
            } else if (selectedDorm.contains("B")) {
                roomComboBox.addItem("B201");
                roomComboBox.addItem("B202");
                roomComboBox.addItem("B221");
                roomComboBox.addItem("B222");
            } else if (selectedDorm.contains("C")) {
                roomComboBox.addItem("C301");
                roomComboBox.addItem("C302");
                roomComboBox.addItem("C321");
                roomComboBox.addItem("C322");
            } else if (selectedDorm.contains("D")) {
                roomComboBox.addItem("D401");
                roomComboBox.addItem("D402");
                roomComboBox.addItem("D421");
                roomComboBox.addItem("D422");
            }
        }
    }

    
}